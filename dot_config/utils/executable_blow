#!/usr/bin/env bash

################################################################################
# requires: ripgrep (rg), fzf for interactive mode
################################################################################
usage() {
    echo "Usage: blow [-i] [-p] [-n] [<filter>]"
    echo "Returns the last sucked result"
    echo "  -i: interactively select source instead of using the most recent"
    echo "  -p: return file path instead of contents"
    echo "  -n: return with exact name from 1named folder"
    echo "  -h: show this help message"
    echo "  filter: string match for the returned file"
}
################################################################################
if [ -z "$SUCKDIR" ]; then
    echo "SUCKDIR var not set, using default" >&2
    SUCKDIR=~/suck
fi

while getopts "hin:p" opt; do
    case $opt in
        i) interactive=true
            ;;
        p) path=true
            ;;
        n) name=$OPTARG
            ;;
        h) usage; exit 0
            ;;
    esac
done
shift $((OPTIND-1))

if [[ -n $name ]]; then
    file=$SUCKDIR/1named/$name
else
    getCmd="rg --files -g '!{**/archive/**}' $SUCKDIR"

    if [[ -n "$1" ]]; then
        getCmd+=" | rg $1"
    fi 

    if [ "$interactive" = true ]; then
        getCmd+=" | sort -r | fzf --preview 'cat {}'"
    else 
        getCmd+=" | sort | tail -n 1"
    fi
    # echo $getCmd
    file=$(bash -c "$getCmd")
    if [ -z "$file" ]; then
        echo "No content" >&2
        exit 1
    fi
fi

if [ "$path" = true ]; then
    echo $file
else 
    cat $file
fi

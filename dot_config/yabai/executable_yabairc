if [[ $(whoami) == "mac" ]]; then
    yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
    sudo yabai --load-sa
fi

# bsp, stack, float
yabai -m config layout bsp
if [[ $(whoami) != "mac" ]]; then
    yabai -m config --space 1 layout float
fi
yabai -m config active_window_border_color 0xff2ecc71

#border style
yabai -m config normal_window_border_color 0xff000000
yabai -m config window_border on
yabai -m config window_border_blur off
# yabai -m config window_border_width 1

yabai -m config window_placement second_child

#padding
yabai -m config top_padding 2
yabai -m config bottom_padding 2
yabai -m config left_padding 2
yabai -m config right_padding 2

#mouse
yabai -m config mouse_follows_focus on
yabai -m config focus_follows_mouse off

yabai -m config mouse_modifier off
yabai -m config mouse_action1 off
yabai -m config mouse_action2 off

#doesn't work without SIP disabled
yabai -m config window_shadow off 

# Disable animations when opening and closing windows.
defaults write NSGlobalDomain NSAutomaticWindowAnimationsEnabled -bool false

# Accelerated playback when adjusting the window size.
defaults write NSGlobalDomain NSWindowResizeTime -float 0.001

#space config
yabai -m space 1 --label left
yabai -m space 2 --label main1
yabai -m space 3 --label main2

#ignored apps
yabai -m rule --add app="^System Settings$" manage=off border=off
yabai -m rule --add app="^FortiClient$" manage=off border=off
yabai -m rule --add app="^Spotify$" manage=off border=off
yabai -m rule --add app="^Calculator$" manage=off border=off
yabai -m rule --add app="^Microsoft Teams$" manage=off border=off
yabai -m rule --add app="^BetterTouchTool$" manage=off border=off
yabai -m rule --add app="^Finder$" manage=off border=off
yabai -m rule --add app="^Microsoft Outlook$" title!="^(Inbox|Calendar)" manage=off border==off
yabai -m rule --add app="^IntelliJ IDEA$" title="^(Settings|Move|Preferences|Breakpoints|Select Methods to Implement)$" manage=off
yabai -m rule --add app="^VisualVM$" title="^(Profile Startup|Options)$" manage=off
# yabai -m rule --add app="^Intellij IDEA$" title="^Find$" manage=off
# yabai -m rule --add app="^Intellij IDEA$" title="^Find in Path$" manage=off

# yabai -m signal --add event=application_activated app="^Intellij IDEA$" action="yabai -m query --windows --window | jq -re '.title' | xargs -I {} osascript -e 'display notification \"{}\" with title \"{}\"'"
# EVENT_TYPES=(
#     display_added
#     display_removed
#     display_chainged
#     space_changed
#     application_visible
#     application_hidden
#     window_created
#     window_destroyed
# )
#
# for event in ${EVENT_TYPES[@]}; do
#     yabai -m signal --add event=$event action="hs -ac -A 'stackline.:update({forceRedraw = true})'"
# done
# yabai -m config external_bar main:0:26

# yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"
# yabai -m signal --add event=space_changed action="sketchybar --trigger windows_on_spaces"
